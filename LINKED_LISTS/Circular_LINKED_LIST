#include<stdio.h>
#include<stdlib.h>
struct node
{
    int data;
    struct node *next;
    
}*start=NULL;

void createcllc()
{
    
 int choice=1;
 while(choice)
 {
    	int cho;
    struct node *tmp,*tmp1;
    tmp=(struct node*)malloc(sizeof(struct node));
    
    printf("\nEnter the data= ");
    scanf("%d",&tmp->data);
    tmp->next=0;
    if(start==NULL)
    {
        start=tmp;
        tmp1=tmp;
    }
    else
    {
        tmp1->next=tmp;
        tmp1=tmp;
    }
    tmp1->next=start;
    printf("\nvalue of data of 1st node= %d",tmp1->next->data);
    printf("\n1 for continue 0 for exit");
    scanf("%d",&choice);
   
    
}

}
void  display()
{
    struct node *tmp1;
    if(start==NULL)
    {
        printf("Empty list");
    }
    else
    {
        tmp1=start;
        while(tmp1->next!=start)
        {
            printf(" %d, ",tmp1->data);
            tmp1=tmp1->next;
        }
        printf("%d",tmp1->data);
        
    }
}

void binsert()
{
	struct node *tmp,*tmp1;
	tmp=(struct node*)malloc(sizeof(struct node));
	
	printf("\nEnter the data= ");
	scanf("%d",&tmp->data);
	tmp->next=0;
	tmp->next=start;
	tmp1=start;
	while(tmp1->next!=start)
	{
		tmp1=tmp1->next;
	}
	tmp1->next=tmp;
	
}
void anyinsert()
{
	int pos;
	struct node *tmp,*tmp1,*tmp2;
	tmp=(struct node*)malloc(sizeof(struct node));
		printf("\nEnter the position= ");
	scanf("%d",&pos);
	printf("\nEnter the data= ");
	scanf("%d",&tmp->data);
	
	tmp->next=0;
	tmp1=start;

	int i=1;
	
	while(i!=pos)
	{
		tmp1=tmp1->next;
		i=i+1;
		
	}
	tmp->next=tmp1;
	tmp2=start;
	while(tmp2->next!=tmp1)
	{
		tmp2=tmp2->next;
	}
	tmp2->next=tmp;
	
}
void bdelete()
{
	int c=0;
	sta:
  struct node *tmp,*tmp1;
  tmp=start;
  tmp1=start;
  while(tmp1->next!=start)
  {
  	tmp1=tmp1->next;
    }
    if(start->next!=start)
	{
	printf("element delete sucessfully");
	start=tmp->next;
	tmp1->next=tmp->next;	
	int c=0;
	}
	else if(start->next==start && c==0)
	{
	 printf("\nelement delete sucessfully");
	 
	 
	 int c=1;
	  
    }
    else
    printf("\nEmpty list");
	
}

void nodes()
{
	int c=0;
	struct node *tmp1,*tmp;
	tmp1=start;
	while(tmp1->next!=start)
	{
		c=c+1;
		tmp1=tmp1->next;
	}
	c=c+1;
	printf("\nNo.of nodes=%d",c);
}

void searching()
{
	struct node *tmp1,*tmp;
	int search;
	tmp1=start;
	printf("\nEnter the searching elements= ");
	scanf("%d",&search);
	while(tmp1->next!=start)
	
	{
		if(tmp1->data==search)
		{
			printf("\nElement is found");
			break;
		}
		else
		tmp1=tmp1->next;
	}
	if(tmp1->data==search)
	{
		printf("\nElement is found");
	}
	else
	printf("\nElement is not found");
	
	
}

void frequency()
{
	struct node *tmp1,*tmp;
	int feq;
	int c=0;
	printf("\nEnter the frquency number= ");
	scanf("%d",&feq);
	tmp1=start;
	while(tmp1->next!=start)
	{
		if(tmp1->data==feq)
		{
			c=c+1;
			
		}
		tmp1=tmp1->next;
	}
	if(tmp1->data==feq)
	{
		c=c+1;
	}
	printf("\nFrequecy of = %d is %d",feq,c);
}
void Exit()
{
	exit(1);
}
int main()
{
  int ch;
  while(1)
  { 
  printf("\n1>create cllc\n2>display\n3>insert node new\n4>Insert at any position\n5>Delete from begining\n6>count no.of nodes\n7>searching the elements\n8>frequency of elements\n9>Exit\n");
  printf("\nEnter the choice= ");
  scanf("%d",&ch); 
  switch(ch)
  {
      case 1:createcllc();
	  break;
	  
	  case 2:display();
	  break;
	  
	  case 3:binsert();
	    break;
	    case 4:anyinsert();
	    break;
	    case 5:bdelete();
	    break;
	    case 6:nodes();
	    break;
	    case 7:searching();
	    break;
	    case 8:frequency();
	    break;
        case 9:Exit();
        break;
      
  }
  
  
   }
}
