#include<stdio.h>
#include<stdlib.h>

struct node
{
	int data;
	struct node *next;
}*start=NULL;

void create()
{
struct node *tmp,*tmp1;
 tmp=(struct node*)malloc(sizeof(struct node));
 
 printf("enter the data= ");
 scanf("%d",&tmp->data);
 tmp->next=NULL;
 if(start==NULL)
 {
   start=tmp;
   tmp1=tmp;	
 }
 	
 else
 {
  tmp1=start;
  
  while(tmp1->next!=NULL)
  {
   tmp1=tmp1->next;
  }
  
   tmp1->next=tmp;
  }
}




void display()
{
	node *tmp;
	tmp=start;
	if(tmp==NULL)
	{
		printf("empty");
	}
	else
	while(tmp!=NULL)
	{
		printf(" %d,",tmp->data);
		tmp=tmp->next;
	}
	
}


void beginsert()

{
	struct node *tmp;
	tmp=(struct node*)malloc(sizeof(struct node));
	tmp->next=NULL;
	
	printf("enter the data= ");
	scanf("%d",&tmp->data);
	tmp->next=start; //NUll
	start=tmp; //Start=100
	printf("\n elements inserted at first node");
	
}

void lastinsert()
{
struct node *tmp,*tmp1;
	tmp=(struct node*)malloc(sizeof(struct node));
	printf("enter the data= ");
	scanf("%d",&tmp->data);
	 //NUll
	 tmp->next=NULL;
	tmp1=start;
	while(tmp1->next!=NULL)
	{
		tmp1=tmp1->next;
	}
	tmp1->next=tmp;
}
void countnodes()
{
	int count=0;
  	node *tmp;
	tmp=start;
	if(tmp==NULL)
	{
		printf("zero nodes");
	}
	else
	while(tmp!=NULL)
	{
		count=count+1;
		tmp=tmp->next;
	}	
	printf("No.of nodes= %d",count);
}

void anypInsert()

{
  int pos,count=0,i;
  struct node *tmp,*tmp1;
  tmp=start;
  while(tmp!=NULL)
  {
  	count=count+1;
  	tmp=tmp->next;
  }
  printf("\nEnter position to insert= ");
  scanf("%d",&pos);
  if(pos<1||pos>count+1)
  {
  	printf("\nInvalid position");
  }
  else
  tmp=(struct node*)malloc(sizeof(struct node));
  printf("\nEnter the value for new node= ");
  scanf("%d",&tmp->data);
  if(pos==1)
  {
  	tmp->next=start;
  	start=tmp;
  	printf("\nInsertion Sucessfull");
  }
  else
  {
  	tmp1=start;
  	for(i=1;i<pos-1;i++)
  	{
  		tmp1=tmp1->next;
  		tmp->next=tmp1->next;
  		tmp1->next=tmp;
  		printf("\nAny position inserted dones");
	  }
  }

  
}

void bdelete()
{
	struct node *tmp;
	tmp=start;
	start=tmp->next;
	free(tmp);
	printf("\n first delete sucessfully");
}
void ldelete()
{
	struct node *tmp,*tmp1;
	tmp=start;
	while(tmp->next->next!=NULL)
	{
		tmp=tmp->next;
	}
	tmp1=tmp->next;
	tmp->next=NULL;
	free(tmp);
	printf("\n Delete sucessfully");
}
void linkedsum()
{
 int sum=0;
 struct node *tmp;
 tmp=start;
 
 while(tmp->next!=NULL)
 {
 	sum=sum+tmp->data;
 	tmp=tmp->next;
 }
if(tmp->next==NULL)
{
  sum=sum+tmp->data;	
}
 printf("\nSum of elements is= %d",sum);
}
void alinkedsum()
{
	int asum=0;
  struct node *tmp;
  tmp=start;
  while(tmp->next!=NULL)
  {
        asum=asum+tmp->data;
  	tmp=tmp->next->next;
  	
  }
if(tmp->next==NULL)
{
  asum=asum+tmp->data;	
}
	

  printf("\nAlternate sum of linked list is= %d",asum);
}
void searchlinked()
{
  int n;
  struct node *tmp;
  printf("Enter the searching elementts in linked list= ");
  scanf("%d",&n);
  tmp=start;
  while(tmp->next!=NULL)
  {
  	if(tmp->data==n)
  	{
  	   printf("\nElements is found in linked list");
	   break;	
    }
    else
    tmp=tmp->next;
  }
if(tmp->next==NULL)
{
 if(tmp->data==n)

printf("element is found in linked list");
  	

else
printf("element is not found in linked list");
}
}
void frequencylinked()
{
  int key,count=0,s;
    struct node *tmp;
      tmp=start;
      if(tmp==NULL)
      {
      	printf("n\EMPTY LINKED LIST");
	  }
	  else
  {
	  
     printf("Enter the frequency number= ");
     scanf("%d",&key);
     while(tmp->next!=NULL)
     {
     	if(key==tmp->data)
     	{
		 
     	
     		count=count+1;
     		s=count;
            tmp=tmp->next;
            }
                
       }
   }
     		
	 		
    

	 printf("\nNo.of frquency of is=%d", s);
  	
}

int main()

{
	int choice;
	while(1)
	{
    printf("\n1->create list\n2->display list\n3>Insert item at the beginning\n4->Insert item from the last position\n5> countnodes\n6>insert in any positions\n7>delete node from begining\n8>delete node from last\n9>Sum of elements of linked list\n10Sum of alternate elements of linked list\n11>Searching elements in linked list\n12>Frequency of elements in linked list\n13>Exit\n");
    printf("\nEnter your Choice= ");
    scanf("%d",&choice);
	{
		if(choice==1)
		{
		    create();	
		}
		else if(choice==2)
		{
			display();
		}
		else if(choice==3)
		{
		   beginsert();	
		}
		else if(choice==4)
		{
			lastinsert();
		}
		else if(choice==5)
		{
			countnodes();
		}
		else if(choice==6)
		
		{
			anypInsert();
		}
		else if(choice==7)
		{
		bdelete();
		}
		else if(choice==8)
		{
		ldelete();	
		}
		else if(choice==9)
		{
			linkedsum();
		}
			else if(choice==10)
		{
		  alinkedsum();	
		}
		
			else if(choice==11)
		{
			searchlinked();
		}
			else if(choice==12)
		{
			frequencylinked();
		}
		
		else if(choice==13)
		{
		  break;	
		}
		else
		printf("\n Invalid choice");
		
	}
}
}
