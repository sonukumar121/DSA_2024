#include<stdio.h>
#include<stdlib.h>

struct node
{
	int data;
	struct node *next;
}*start=NULL;

void create()
{
 struct node *tmp,*tmp1;
 tmp=(struct node*)malloc(sizeof(struct node));
 
 printf("enter the data= ");
 scanf("%d",&tmp->data);
 tmp->next=NULL;
 if(start==NULL)
 {
   start=tmp;	
 }	
 else
  tmp1=start;
  while(tmp1->next!=NULL)
   tmp1=tmp1->next;
   
   tmp1->next=tmp;
}



void display()
{
	node *tmp;
	tmp=start;
	if(tmp==NULL)
	{
		printf("empty");
	}
	else
	while(tmp!=NULL)
	{
		printf(" %d,",tmp->data);
		tmp=tmp->next;
	}
	
}


void beginsert()

{
	struct node *tmp;
	tmp=(struct node*)malloc(sizeof(struct node));
	tmp->next=NULL;
	
	printf("enter the data= ");
	scanf("%d",&tmp->data);
	tmp->next=start; //NUll
	start=tmp; //Start=100
	printf("\n elements inserted at first node");
	
}

void lastinsert()
{
struct node *tmp,*tmp1;
	tmp=(struct node*)malloc(sizeof(struct node));
	printf("enter the data= ");
	scanf("%d",&tmp->data);
	 //NUll
	 tmp->next=NULL;
	tmp1=start;
	while(tmp1->next!=NULL)
	{
		tmp1=tmp1->next;
	}
	tmp1->next=tmp;
}
void countnodes()
{
	int count=0;
  	node *tmp;
	tmp=start;
	if(tmp==NULL)
	{
		printf("zero nodes");
	}
	else
	while(tmp!=NULL)
	{
		count=count+1;
		tmp=tmp->next;
	}	
	printf("No.of nodes= %d",count);
}

void anypInsert()

{
  int pos,count=0,i;
  struct node *tmp,*tmp1;
  tmp=start;
  while(tmp!=NULL)
  {
  	count=count+1;
  	tmp=tmp->next;
  }
  printf("\nEnter position to insert= ");
  scanf("%d",&pos);
  if(pos<1||pos>count+1)
  {
  	printf("\nInvalid position");
  }
  else
  tmp=(struct node*)malloc(sizeof(struct node));
  printf("\nEnter the value for new node= ");
  scanf("%d",&tmp->data);
  if(pos==1)
  {
  	tmp->next=start;
  	start=tmp;
  	printf("\nInsertion Sucessfull");
  }
  else
  {
  	tmp1=start;
  	for(i=1;i<pos-1;i++)
  	{
  		tmp1=tmp1->next;
  		tmp->next=tmp1->next;
  		tmp1->next=tmp;
  		printf("\nAny position inserted dones");
	  }
  }

  
}
int main()

{
	int choice;
	while(1)
	{
    printf("\n 1->create list\n 2->display list\n  3->Insert item at the beginning\n 4->Insert item from the last position\n 5> countnodes\n 6>anypInsert\n 7>Exit\n");
    scanf("%d",&choice);
	{
		if(choice==1)
		{
		    create();	
		}
		else if(choice==2)
		{
			display();
		}
		else if(choice==3)
		{
		   beginsert();	
		}
		else if(choice==4)
		{
			lastinsert();
		}
		else if(choice==5)
		{
			countnodes();
		}
		else if(choice==6)
		
		{
			anypInsert();
		}
		else if(choice==7)
		{
		  break;	
		}
		else
		printf("\n Invalid choice");
		
	}
}
}
